import { readFile, writeFile } from 'node:fs/promises';

import { CodegenConfig, generate } from '@graphql-codegen/cli';

async function main() {
  console.log(`------------------------ @graphql-codegen/cli ------------------------`);

  const TYPES_PATH = 'apps/zen-unity/Assets/Scripts/GraphQL/Generated/Types.cs';
  const OPERATIONS_PATH = 'apps/zen-unity/Assets/Scripts/GraphQL/Generated/Operations.cs';

  const config: CodegenConfig = {
    overwrite: true,
    schema: 'http://localhost:7080/graphql',
    documents: ['apps/zen-unity/Assets/Scripts/**/*.graphql'],
    config: {
      namespaceName: 'Zen.GraphQL',
    },
    generates: {
      [OPERATIONS_PATH]: {
        plugins: ['c-sharp-operations'],
      },
      [TYPES_PATH]: {
        plugins: ['c-sharp'],
        config: {
          strictScalars: true,
          scalars: { DateTime: 'DateTime', Json: 'object', Upload: 'object' },
        },
      },
    },
  };

  // Generate C# GraphQL types
  await generate(config);

  // Preppend autogenerated comment
  let typesSource = (await readFile(TYPES_PATH)).toString();
  typesSource = '// <autogenerated />\n' + typesSource;
  await writeFile(TYPES_PATH, typesSource);

  let operationsSource = (await readFile(OPERATIONS_PATH)).toString();
  operationsSource = '// <autogenerated />\n' + operationsSource;
  await writeFile(OPERATIONS_PATH, operationsSource);
}

// Run script
main().catch(e => {
  console.error(e);
  process.exit(1);
});
